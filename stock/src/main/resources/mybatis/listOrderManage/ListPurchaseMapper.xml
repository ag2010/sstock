<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ListPurchaseMapper">

	<resultMap type="ListPurchase" id="ListPurchaseResult">  
		<result property="id" column="id" />
		<result property="purchaseTime" column="purchaseTime" />
		<result property="purchaser" column="purchaser" />
		<result property="shopId" column="shopId" />
		<result property="storeId" column="storeId" />
		<result property="name" column="name" />
		<result property="storeName" column="storeName" /> 
		<result property="status" column="status" />
		<result property="deliveryId" column="deliveryId" />
		<result property="remark" column="remark" />
		<result property="addTime" column="addTime" />
		<result property="updateTime" column="updateTime" />
		<result column="address" property="address" />
        <result column="phone" property="phone" />
	
		
  	    <association property="shop" javaType="Shops">
					<id property="id" column="id"/>
					<result property="name" column="name"/>
					<result property="contacts" column="contacts" />
					<result column="address" property="address" />
                    <result column="phone" property="phone" />
		</association>
		<association property="store" javaType="Stores">
					<id property="id" column="id"/>
					<result property="storeName" column="storeName"/>
					<result column="address" property="address" />
		</association>
	</resultMap>
	<select id="pageInfoQuery" parameterType="PageUtilEntity" resultType="ListPurchase" useCache="false">
						SELECT 
								  p.id,
								  p.purchaseTime,
								  p.purchaser,
								  s.name,
								  s.phone,
					              s.address,
								  t.storeName,
								  p.status,
								  p.deliveryId,
								  p.remark,
								  p.shopId,
								  p.storeId
								FROM
								  list_purchase p 
								  LEFT JOIN shops s 
								    ON p.shopId = s.id 
								  LEFT JOIN stores t 
								    ON p.storeId = t.id 
								WHERE 1 = 1 
		<if test="relationMap.allname != null and relationMap.allname != ''"><!-- 关键词检索 -->
			AND
				(
					 p.id LIKE CONCAT(CONCAT('%', #{relationMap.allname }),'%')
					 OR 
					 s.name LIKE CONCAT(CONCAT('%', #{relationMap.allname }),'%')
				)
		</if>
			<if test="relationMap.beginTime != null and relationMap.beginTime != ''"><!-- 开始时间检索 -->
			AND DATE_FORMAT( p.purchaseTime,'%Y%m%d') &gt;= DATE_FORMAT(#{relationMap.beginTime},'%Y%m%d')
		</if>
		<if test="relationMap.endTime != null and relationMap.endTime != ''"><!-- 结束时间检索 -->
			AND DATE_FORMAT( p.purchaseTime,'%Y%m%d') &lt;= DATE_FORMAT(#{relationMap.endTime},'%Y%m%d')
		</if>
		<if test="relationMap.status != null and relationMap.status != ''">
			AND p.status=#{relationMap.status}
		</if>
		order by p.purchaseTime DESC 
	</select>
	
	<select id="findListPurchaseById" parameterType="String" resultType="ListPurchase">
			SELECT 
					  p.id,
					  p.purchaseTime,
					  p.purchaser,
					  s.name,
					  s.phone,
					  s.address,
					  t.storeName,
					  p.status,
					  p.deliveryId,
					  p.remark,
					  p.shopId,
					  p.storeId
					FROM
					  list_purchase p 
					  LEFT JOIN shops s 
					    ON p.shopId = s.id 
					  LEFT JOIN stores t 
					    ON p.storeId = t.id 
				WHERE  p.id= #{Id} 
	</select>
	
	<select id="getExpPurchaseList" parameterType="PageUtilEntity" resultType="ListPurchase" useCache="false">
							SELECT 
								  p.id,
								  p.purchaseTime,
								  p.purchaser,
								  s.name,
								  t.storeName,
								  p.status,
								  p.deliveryId,
								  p.remark,
								  p.shopId,
								  p.storeId
								FROM
								  list_purchase p 
								  LEFT JOIN shops s 
								    ON p.shopId = s.id 
								  LEFT JOIN stores t 
								    ON p.storeId = t.id 
								WHERE 1 = 1  
		
	</select>

	<select id="getMaxId" resultType="String">
		SELECT SUBSTRING(MAX(id),13) FROM list_purchase
	</select>

	<insert id="addPurchase" parameterType="ListPurchase" useGeneratedKeys="true" keyProperty="id">
		insert list_purchase(
		<if test="id != null and id != ''">id</if>
		<if test="purchaseTime != null">,purchaseTime</if>
		<if test="purchaser != null and purchaser != ''">,purchaser</if>
		<if test="shopId !=null and shopId != ''">,shopId</if>
		<if test="storeId !=null and storeId != ''">,storeId</if>
		<if test="status !=null ">,status</if>
		<if test="deliveryId !=null and deliveryId != ''">,deliveryId</if>
		<if test="remark !=null and remark != ''">,remark</if>
		<if test="addTime !=null">,addTime</if>
		<if test="updateTime !=null">,updateTime</if>
		)values(
		<if test="id != null and id != ''">#{id}</if>
		<if test="purchaseTime != null">,#{purchaseTime}</if>
		<if test="purchaser != null and purchaser != ''">,#{purchaser}</if>
		<if test="shopId !=null and shopId != ''">,#{shopId}</if>
		<if test="storeId !=null and storeId != ''">,#{storeId}</if>
		<if test="status !=null ">,#{status}</if>
		<if test="deliveryId !=null and deliveryId != ''">,#{deliveryId}</if>
		<if test="remark !=null and remark != ''">,#{remark}</if>
		<if test="addTime !=null">,#{addTime}</if>
		<if test="updateTime !=null">,#{updateTime}</if>
		)
	</insert>

 
     <!-- 修改状态 -->
    <update id="changePurchaseStatus">
         update list_purchase
         <set>
          <if test="status !=null and status != ''">status =#{status},</if>
         <if test="deliveryId !=null and deliveryId != ''">deliveryId=#{deliveryId},</if>
         <if test="updateTime !=null">updateTime=#{updateTime}</if>
         </set>
         where id = #{id} 
       <!--   <if test="id != null and id  != ''">and id = #{id}</if> -->
    </update>
   
   <select id="getProSupplierOptions"  resultType="SysCode" useCache="false">
		SELECT id as codeid,name as codevalue FROM shops  where status ='1'
	</select>
	
	<insert id="savePurchaseOrders" parameterType="java.util.List"> 
 		insert into orders ( 
 			id,barCode,number,remark,objId,objType,addTime)
 			values
 			<foreach collection="list" item="item" index="index" separator=",">
 			( #{item.id},#{item.barCode},#{item.number},#{item.remark},#{item.objId},
 			#{item.objType},#{item.addTime})
			</foreach>
 	</insert>
</mapper> 